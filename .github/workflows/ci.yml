# This is a basic workflow to help you get started with Actions

name: CI

run-name: "CI run on: ${{ github.ref_name }}"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  linting:
    # The type of runner that the job will run on
    runs-on:
      - ubuntu-latest
    container:
      image: docker.io/maven:3-eclipse-temurin-21-jammy

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: |
            /root/.m2/repository
            ./libs/
            **/target
          key: ${{ runner.os }}-maven-${{ github.job }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ github.job }}-
            ${{ runner.os }}-maven-

      # Runs a single command using the runners shell
      - name: Check code style
        run: mvn -T 2C checkstyle:check

  build:
    # The type of runner that the job will run on
    runs-on:
      - ubuntu-latest
    container:
      image: docker.io/maven:3-eclipse-temurin-21-jammy

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: '[{ "id": "central", "url": "https://repo1.maven.org/maven2" }, { "id": "github", "url": "https://maven.pkg.github.com/ratgen/ShadedLibGDX", "snapshots": { "enabled": "false" } }]'
          servers: '[{ "id": "github", "username": "TidosDK", "password": "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" }]'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: |
            /root/.m2/repository
            ./libs/
            **/target
          key: ${{ runner.os }}-maven-${{ github.job }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ github.job }}-
            ${{ runner.os }}-maven-

      # Runs a single command using the runners shell
      - name: Compile project
        run: mvn -T 2C compile

  unit-tests:
    # The type of runner that the job will run on
    runs-on:
      - ubuntu-latest
    container:
      image: docker.io/maven:3-eclipse-temurin-21-jammy
    needs:
      - build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: '[{ "id": "central", "url": "https://repo1.maven.org/maven2" }, { "id": "github", "url": "https://maven.pkg.github.com/ratgen/ShadedLibGDX", "snapshots": { "enabled": "false" } }]'
          servers: '[{ "id": "github", "username": "TidosDK", "password": "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" }]'

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: |
            /root/.m2/repository
            ./libs/
            **/target
          key: ${{ runner.os }}-maven-${{ github.job }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ github.job }}-
            ${{ runner.os }}-maven-

      # Runs a single command using the runners shell
      - name: Running unit tests
        run: mvn test
